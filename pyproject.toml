# see https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "nplinker"
version = "2.0.0-alpha.2"
description = "Natural Products Linker"
readme = "README.md"
requires-python = ">=3.9"
keywords = ["Genome", "Metabolome", "Natural Products", "Data Mining"]
license = { text = "Apache-2.0 license" }
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Natural Language :: English",
    "Operating System :: MacOS",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "beautifulsoup4",
    "biopython",
    "deprecated",
    "dynaconf",
    "httpx",
    "jsonschema",
    "numpy",
    "networkx",
    "pandas",
    "pyteomics",
    "rich",
    "scipy",
    "sortedcontainers",
]

[project.optional-dependencies]
dev = [
    # packaging
    "build",
    "wheel",
    # formatting and linting
    "ruff",
    # testing
    "pytest",
    "pytest-cov",
    "pytest-xdist",
    "coverage[toml]",
    # static typing
    "mypy",
    "typing_extensions",
    # stub packages 
    "types-Deprecated",
    "types-beautifulsoup4",
    "types-jsonschema",
    "types-networkx",
    "pandas-stubs",
    # docs
    "black",
    "mkdocs",
    "mkdocs-material",
    "mkdocs-exclude",
    "mkdocs-redirects",
    "mkdocstrings-python",
    "mike",
]

[project.urls]
"Documentation" = "https://nplinker.github.io/nplinker"
"Repository" = "https://github.com/NPLinker/nplinker"
"Issues" = "https://github.com/NPLinker/nplinker/issues"

[tool.setuptools.packages.find]
where = ["src"]
namespaces = true # enable data directory to be identified

[tool.setuptools.package-data]
"nplinker.data" = ["*"]
"nplinker.schemas" = ["*"]
"nplinker" = ["nplinker_default.toml"]

[tool.pytest.ini_options]
minversion = "6.0"
# -ra: show summary info for all test outcomes; 
# -n auto: run tests in parallel; 
# --dist loadgroup: sends tests marked with 'xdist_group' to the same worker
addopts = "-ra -n auto --dist loadgroup"    
testpaths = ["tests/unit"]

[tool.coverage.run]
branch = true
source = ["src"]
relative_files = true # show relative path in report, important for sonarcloud

[tool.coverage.report]
omit = [
    "src/nplinker/class_info/*",
    "src/nplinker/data/*",
    "src/nplinker/genomics/aa_pred.py",
    "src/nplinker/parsers/*",
    "src/nplinker/scoring/iokr/*",
    "src/nplinker/scoring/rosetta/*",
    "src/nplinker/scoring/np_class_scoring.py",
    "src/nplinker/scoring/rosetta_scoring.py",
    "src/nplinker/spec_clustering.py",
    "src/nplinker/pickler.py"
    ]

# Mypy: to check static type
# see https://mypy.readthedocs.io/en/stable/config_file.html#example-pyproject-toml
[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true

[tool.ruff]
target-version = "py310"
line-length = 100

[tool.ruff.lint]
select = [
    "D", # pydocstyle
    "E", # pycodestyle (error)
    "W", # pycodestyle (warning)
    "F", # Pyflakes
    "I", # isort
    "N", # pep8-naming
]
ignore = [
    "E501", # Line too long
    "D100", # Missing module docstring
    "D104", # Missing public package docstring
    "D105", # Missing docstring in magic method
    "D107", # Missing `__init__` docstring
    # The following list excludes rules irrelevant to the Google style
    "D203",
    "D204",
    "D213",
    "D215",
    "D400",
    "D401",
    "D404",
    "D406",
    "D407",
    "D408",
    "D409",
    "D413",
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F", "I"]
ignore-init-module-imports = true

[tool.ruff.lint.per-file-ignores]
# Ignore docstrings in all test files
"tests/**py" = ["D"]

[tool.ruff.lint.isort]
known-first-party = ["nplinker"]
force-single-line = true
lines-after-imports = 2
no-lines-before = [
    "future",
    "standard-library",
    "third-party",
    "first-party",
    "local-folder",
]