# We use setup.cfg to set project metadata and setuptools configs.
# All the other configs (e.g. pytest, coverage) are set in this file.
# see https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html

[build-system]
requires      = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "nplinker"
version = "1.3.2"
description = "Natural Products Linker"
readme = "README.md"
requires-python = ">=3.9"
keywords = ["Genome", "Metabolome", "Natural Products", "Data Mining"]
license = { text = "Apache-2.0 license" }
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Natural Language :: English",
    "Operating System :: MacOS",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dynamic = ["dependencies", "optional-dependencies"]

[tool.setuptools.dynamic]
dependencies              = { file = ["requirements.txt"] }
optional-dependencies.dev = { file = ["requirements.dev.txt"] }

[project.urls]
"Homepage"    = "https://github.com/NPLinker/nplinker"
"Bug Tracker" = "https://github.com/NPLinker/nplinker/issues"

[tool.setuptools.packages.find]
where      = ["src"]
namespaces = true    # enable data directory to be identified

[tool.setuptools.package-data]
"nplinker.data"    = ["*"]
"nplinker.schemas" = ["*"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts    = "-ra -q"
testpaths  = ["tests"]

[tool.coverage.run]
branch       = true
source       = ["src"]
command_line = "-m pytest"

# Mypy: to check static type
# see https://mypy.readthedocs.io/en/stable/config_file.html#example-pyproject-toml
[tool.mypy]
python_version         = "3.10"
warn_return_any        = true
warn_unused_configs    = true
ignore_missing_imports = true

[tool.ruff]
target-version = "py310"
line-length = 100
select = [
    "D", # pydocstyle
    "E", # pycodestyle (error)
    "W", # pycodestyle (warning)
    "F", # Pyflakes
    "I", # isort
    "N", # pep8-naming
]
ignore = [
    "D100", # Missing module docstring
    "D101", # Missing class docstring
    "D104", # Missing public package docstring
    "D105", # Missing docstring in magic method
    # The following list excludes rules irrelevant to the Google style
    "D203",
    "D204",
    "D213",
    "D215",
    "D400",
    "D401",
    "D404",
    "D406",
    "D407",
    "D408",
    "D409",
    "D413",
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F", "I"]

[tool.ruff.isort]
known-first-party = ["nplinker"]
force-single-line = true
lines-after-imports = 2
no-lines-before = [
    "future",
    "standard-library",
    "third-party",
    "first-party",
    "local-folder",
]
