# NPLinker configuration file
# ---------------------------

# general options
# log level (DEBUG/INFO/WARNING/ERROR)
loglevel = "INFO"
# if you want to redirect log messages from stdout to a file, set a valid path here
logfile = ""
# and if you still want to see log messages on stdout in addition to writing to
# the logfile, set this to true
log_to_stdout = true
repro_file = ""

# scoring_methods to be enabled. currently available:
#   - metcalf
#   - testscore
#
# TODO more
# The default is to enable all available methods.
scoring_methods = ["metcalf", "testscore"]

# Dataset configuration
# ---------------------
# NPLinker supports two basic methods for loading datasets:
# 
#   1. All files stored locally
#   2. Some/all files retrieved from the paired omics platform (http://pairedomicsdata.bioinformatics.nl/)
#
# The method you want to use determines the values that should be populated in 
# the [dataset] section below. If working with a purely local dataset, nplinker
# defaults to looking for all the necessary files in a single directory, given
# by the "root" parameter. 
#
# Alternatively, to load metabolomics data from the paired platform, leave the 
# "root" parameter empty and set the "platform_id" parameter to that of the 
# project ID on the platform (a value beginning with "MSV"). 
#
# For more details see below. 
#
# 1. Loading local datasets
# -------------------------
# Generally speaking the dataset layout the application expects matches the structure
# of the output from a GNPS job with TODO TODO TODO settings, plus a few extra
# files from other sources. If you have a dataset in the required structure, 
# typically all you will need to do is tell nplinker where the root directory
# is located. Otherwise you can customise the locations of the individual elements
# using the various override settings below. 
#
# The layout is as follows (see the documentation for more details):
# <root>
#   |- strain_mapping.csv (strain ID mappings)
#   |   (METABOLOMICS DATA)
#   |- clusterinfo_summary/<UID>.tsv (spectrum metadata)
#   |- metadata_table/metadata_table-00000.txt (TODO)
#   |- networkedges_selfloop/<UID>.selfloop (the "edges" file for spectra network)
#   |- quantification_table_reformatted/<UID>.csv ("extra" spectrum metadata - TODO proper name for this?)
#   |- DB_result/*.tsv (GNPS and other spectral annotation files, optional)
#   |- DB_result/annotations.tsv (annotation data to extract from each file, see docs for details)
#   |- params.xml (optional, params.xml from GNPS job output)
#       (GENOMICS DATA)
#   |- antismash/*.gbk (antiSMASH GenBank files for the BGCs in the dataset)
#   |- bigscape/<classes subfolders> (BiG-SCAPE clustering/annotation files in their subfolders)
#       (MISC DATA)
#   |- description.txt (a freeform optional text file containing information about a dataset)
#
# 2. Loading platform datasets
# ----------------------------
# Given a platform ID, nplinker will retrieve the metabolomics data using the 
# GNPS task ID. By default, it will also attempt to retrieve any available 
# genomics data from the antismash database using the RefSeq accession labels 
# in the platform project data. 
# 
# However, if you have local antismash results instead, you should also set the
# location of those files using the "antismash_dir" parameter in the 
# [dataset.overrides] section. nplinker can optionally also run bigscape on 
# these results during the loading process. If you already have bigscape results
# you can additionally set the "bigscape_dir" parameter to the appropriate 
# location to skip this step. 
#
# All files are download and extracted to ~/nplinker_data 
# 
# TODO more detail
[dataset]
# if the dataset has the expected directory structure, this is all that's required
# NOTE: only set one of root and platform_id!
root = "<root directory of dataset>"

# if you want to load data from the paired omics platform, give the project ID 
# here (e.g. "MSV000079284")
# NOTE: only set one of root and platform_id!
platform_id = ""

# antismash file structure. Should be either 'default' or 'flat'. 
# default = the standard structure with nested subdirectories
# flat = all .gbk files placed in a single flat directory
# TODO: is "flat" required any more? 
antismash_format = "default"

# you can optionally set the BIGSCAPE clustering cutoff value here. the default value
# is 30, but any of the valid BIGSCAPE clustering thresholds can be used assuming the
# corresponding files exist in the dataset. Also note that it's possible to change this
# value after the dataset has initially been loaded, which will cause only the affected
# data to be reloaded.
#bigscape_cutoff = 30

[docker]
# this optional section contains various settings that only apply to the dockerised 
# version of nplinker. The Docker image contains BiG-SCAPE, and this tool can be run
# as part of the dataset loading process. If you want to enable/disable this, and 
# configure the parameters used, this can be done by modifying the settings below. 

# enable or disable running BiG-SCAPE on a dataset being used with the nplinker Docker
# image. If false, you must have existing BiG-SCAPE results for your dataset in the 
# format nplinker expects (described above). If true, the copy of BiG-SCAPE installed
# in the Docker image will be run on the directory containing the antiSMASH data for
# the selected dataset, using the parameters configured below. 
# The default value is true
run_bigscape = true

# when BiG-SCAPE is executed by nplinker, it will automatically configure the following
# parameters:
#   -i/--inputdir
#   -o/--outputdir
#   --pfam_dir
#   --clans-off
# 
# In addition, the --cutoffs parameter will default to:
#   --cutoffs=0.3,0.35,0.4,0.45,0.5,0.55,0.6,0.65,0.7
# 
# If you wish to change the set of cutoffs, or set any of the other parameters
# not listed above, you can do so by editing the value of this string. For example,
# to use a smaller set of cutoffs and enable verbose mode:
#   extra_bigscape_parameters = "--cutoffs 0.5,0.6 -v"
extra_bigscape_parameters = ""

# this optional section contains various settings that only affect the webapp interface
# for nplinker. If you're not using it, you can leave this out of your configuration. 
[webapp]
# A fundamental part of the webapp is a set of tables which display objects in the dataset
# that have been found to have links, based on the output of the Metcalf scoring method. 
# The value of this parameter is the minimum Metcalf score that a link must have for its
# associated objects to appear in the table. In other words, the higher this is set, the
# smaller the number of objects that will remain to be displayed in the tables. This may
# be useful for improving performance on larger datasets. 
# The default value is 2.0
tables_metcalf_threshold = 2.0

# a section for general scoring parameters (currently unused)
[scoring]

# the "Rosetta" scoring method involves some preprocessing steps that can take
# significant time. nplinker will automatically run these steps as it loads the
# dataset and cache the results. if you would like to adjust the parameters used 
# by the Rosetta method you can do by setting them below (note that changing
# these values will invalidate any cached data and force the preprocessing steps
# to be run again)
# 
# TODO document what these do
[scoring.rosetta]
# ms1_tol = 100
# ms2_tol = 0.2
# score_thresh = 0.5
# min_match_peaks = 1

# when loading, you can also override any combination of individual file paths
# as required (empty paths are ignored)
[dataset.overrides]
# strain ID mapping filename, default is <root>/strain_mapping.csv
#strain_mappings_file = ""

# MGF filename. This path is passed to glob.glob, default is <root>/spectra/*.mgf
#mgf_file = ""

# nodes filename. This path is passed to glob.glob, default is <root>/clusterinfo_summary/*.tsv
#nodes_file = ""

# don't know what to call this yet? TODO
# "extra" spectrum metadata file, default is <root>/*_quant.csv
#extra_nodes_file = ""

# edges filename. This path is passed to glob.glob, default is <root>/networkedges_selfloop/*.selfloop
#edges_file = ""

# metadata table filename. This path is passed to glob.glob, default is <root>/metadata_table/metadata_table-*.txt
#metadata_table_file = ""

# quantification table filename. This path is passed to glob.glob, default is <root>/quantification_table/quantification_table-*.csv
#quantification_table_file = ""

# GNPS spectral annotations directory, default is <root>/DB_result
#annotations_dir = ""

# annotation configuration file, default is <root>/annotations.tsv
#annotations_config_file = ""

# Antismash data directory, default is <root>/antismash
#antismash_dir = ""

# bigscape directory, default is <root>/bigscape
# it's expected that the various class subdirectory (NRPS etc) will exist at this location.
# within each class subdirectory, there should be a Network_Annotations_<class>.tsv file plus
# a set of <class>_clustering_<params>.tsv files
#bigscape_dir = ""

# directory containing MiBIG .json files, default is <root>/mibig_json
# (if needed, download the appropriate version of the archive in JSON format
# from https://mibig.secondarymetabolites.org/download and extract the contents)
#mibig_json_dir = ""
