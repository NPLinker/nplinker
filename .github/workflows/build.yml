name: Build and test Python package

on:
  push:
    branches:
      - main
    paths:
      - src/**
      - tests/**
      - setup.py
  pull_request:
    branches:
      - main
    paths:
      - src/**
      - tests/**
      - setup.py

jobs:

  smoke_test:
    name: Smoke test on ubuntu for python 3.10
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
      - name: Python info
        shell: bash -l {0}
        run: |
          which python3
          python3 --version
      - name: Upgrade pip and install dependencies
        run: |
          python3 -m pip install --upgrade pip setuptools
          pip install build pytest wheel
      - name: Build the package
        run: 	python -m build
      - name: Install nplinker
        run: |
          pip install $(ls dist/nplinker*.whl)
          install-nplinker-deps
      - name: Run unit tests
        run: pytest -v

  build:
    needs: smoke_test
    name: Build for (${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest', 'macos-latest']
        python-version: ['3.7', '3.8', '3.9']
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Python info
        shell: bash -l {0}
        run: |
          which python3
          python3 --version
      - name: Upgrade pip and install dependencies
        run: |
          python3 -m pip install --upgrade pip setuptools
          pip install build pytest
      - name: Build the package
        run: 	python -m build
      - name: Install nplinker
        run: |
          pip install $(ls dist/nplinker*.whl)
          install-nplinker-deps
      - name: Run unit tests
        run: pytest -v

  sonarcloud:
    name: SonarCloud
    needs: smoke_test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
      - name: Python info
        shell: bash -l {0}
        run: |
          which python3
          python3 --version
      - name: Upgrade pip and setuptools
        run: |
          python3 -m pip install --upgrade pip setuptools
      - name: Install nplinker and its dependencies
        run: |
          python3 -m pip install .[dev]
          install-nplinker-deps
      - name: Check style against standards using prospector
        run: prospector --zero-exit --output-format grouped --output-format pylint:pylint-report.txt
      - name: Run unit tests with coverage
        run: pytest --cov --cov-report term --cov-report xml --junitxml=xunit-result.xml tests/
      - name: Correct coverage paths
        run: sed -i "s+$PWD/++g" coverage.xml
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{secrets.SONAR_TOKEN }}
